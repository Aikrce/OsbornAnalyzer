import React, { useState, useEffect, useCallback } from 'react';
import { useSearchParams, useNavigate } from 'react-router-dom';
import { Button } from '../components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';
import { Badge } from '../components/ui/badge';
import { useAnalysis } from '../hooks/useAnalysis';
import { useLocalCases } from '../hooks/useLocalCases';
import { LoadingSpinner } from '../components/LoadingSpinner';
import { 
  IconArrowLeft, 
   
  IconBookmark, 
  IconShare,
  IconCheck,
  IconSparkles
} from '@tabler/icons-react';

const OsbornAnalysisPage: React.FC = () => {
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const topic = searchParams.get('topic') || '';
  const { results, isLoading, error, analyze } = useAnalysis();
  const { createCaseFromAnalysis, statistics } = useLocalCases();
  // const [activeTab, setActiveTab] = useState('analysis');
  const [isSaving, setIsSaving] = useState(false);
  const [saveSuccess, setSaveSuccess] = useState(false);

  // 自动分析
  useEffect(() => {
    if (topic && results.length === 0) {
      analyze(topic);
    }
  }, [topic, results.length, analyze]);

  // 保存到本地案例库
  const handleSaveToLibrary = useCallback(async () => {
    if (results.length === 0) return;

    try {
      setIsSaving(true);
      const result = results[0]; // 取第一个结果
      
      await createCaseFromAnalysis(topic, result, {
        description: `基于奥斯本九问的${topic}创新分析`,
        industry: '创新分析',
        company: '用户分析',
        tags: ['奥斯本分析', '创新思维', topic]
      });

      setSaveSuccess(true);
      setTimeout(() => setSaveSuccess(false), 3000);
    } catch (err) {
      console.error('Failed to save case:', err);
    } finally {
      setIsSaving(false);
    }
  }, [topic, results, createCaseFromAnalysis]);

  // 返回首页
  const handleGoBack = useCallback(() => {
    navigate('/home');
  }, [navigate]);

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 flex items-center justify-center">
        <div className="text-center">
          <LoadingSpinner />
          <p className="mt-4 text-gray-600">正在分析中，请稍候...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 flex items-center justify-center">
        <div className="text-center">
          <div className="text-red-500 text-xl mb-4">分析失败</div>
          <p className="text-gray-600 mb-6">{error}</p>
          <Button onClick={handleGoBack} variant="outline">
            <IconArrowLeft size={16} className="mr-2" />
            返回首页
          </Button>
        </div>
      </div>
    );
  }

  if (results.length === 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 flex items-center justify-center">
        <div className="text-center">
          <div className="text-gray-500 text-xl mb-4">暂无分析结果</div>
          <Button onClick={handleGoBack} variant="outline">
            <IconArrowLeft size={16} className="mr-2" />
            返回首页
          </Button>
        </div>
      </div>
    );
  }

  const result = results[0];

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* 头部 */}
        <div className="mb-8">
          <div className="flex items-center justify-between mb-6">
            <Button 
              onClick={handleGoBack} 
              variant="outline" 
              className="rounded-xl"
            >
              <IconArrowLeft size={16} className="mr-2" />
              返回首页
            </Button>
            
            <div className="flex items-center space-x-3">
              <Button
                onClick={handleSaveToLibrary}
                disabled={isSaving}
                className={`rounded-xl ${
                  saveSuccess 
                    ? 'bg-green-500 hover:bg-green-600' 
                    : 'bg-blue-500 hover:bg-blue-600'
                }`}
              >
                {isSaving ? (
                  <>
                    <LoadingSpinner />
                    <span className="ml-2">保存中...</span>
                  </>
                ) : saveSuccess ? (
                  <>
                    <IconCheck size={16} className="mr-2" />
                    已保存
                  </>
                ) : (
                  <>
                    <IconBookmark size={16} className="mr-2" />
                    保存到案例库
                  </>
                )}
              </Button>
              
              <Button variant="outline" className="rounded-xl">
                <IconShare size={16} className="mr-2" />
                分享
              </Button>
            </div>
          </div>

          <div className="text-center">
            <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl mb-6 shadow-xl shadow-blue-500/20">
              <IconSparkles size={28} className="text-white" />
            </div>
            
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              奥斯本检核表分析
            </h1>
            
            <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-gray-200/50 shadow-lg shadow-gray-200/20 max-w-2xl mx-auto">
              <h2 className="text-2xl font-semibold text-gray-900 mb-2">{topic}</h2>
              <p className="text-gray-600">
                基于奥斯本检核表法的系统性创新思考框架，从九个维度全面分析问题
              </p>
            </div>
          </div>
        </div>

        {/* 分析结果 */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* 左侧：分析维度 */}
          <div className="lg:col-span-2">
            <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl shadow-gray-200/20">
              <CardHeader>
                <CardTitle className="text-2xl font-bold text-gray-900 flex items-center">
                  <IconSparkles size={24} className="mr-3 text-blue-600" />
                  分析维度
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {Object.entries(result.questions).map(([category, questions], categoryIndex) => (
                    <div key={category} className="bg-gradient-to-br from-blue-50 to-indigo-50 p-6 rounded-2xl border border-blue-200/50">
                      <div className="flex items-center mb-4">
                        <div className="flex items-center justify-center w-8 h-8 bg-blue-500 text-white rounded-full text-sm font-bold mr-3">
                          {categoryIndex + 1}
                        </div>
                        <h3 className="text-lg font-semibold text-blue-900">{category}</h3>
                      </div>
                      <ul className="space-y-2">
                        {questions.map((question, qIndex) => (
                          <li key={qIndex} className="text-sm text-blue-800 flex items-start">
                            <span className="w-2 h-2 bg-blue-400 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                            {question}
                          </li>
                        ))}
                      </ul>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>

          {/* 右侧：分析摘要和建议 */}
          <div className="space-y-6">
            {/* 分析摘要 */}
            <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl shadow-gray-200/20">
              <CardHeader>
                <CardTitle className="text-xl font-bold text-gray-900">分析摘要</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-700 leading-relaxed">
                  {result.analysis || '基于奥斯本九问的全面分析，从多个维度探索创新可能性。'}
                </p>
              </CardContent>
            </Card>

            {/* 创新建议 */}
            {result.suggestions && result.suggestions.length > 0 && (
              <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl shadow-gray-200/20">
                <CardHeader>
                  <CardTitle className="text-xl font-bold text-gray-900">创新建议</CardTitle>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-3">
                    {result.suggestions.map((suggestion, index) => (
                      <li key={index} className="flex items-start">
                        <span className="w-2 h-2 bg-green-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                        <span className="text-gray-700">{suggestion}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            )}

            {/* 统计信息 */}
            <Card className="bg-gradient-to-br from-blue-50 to-indigo-50 border border-blue-200/50 shadow-xl shadow-blue-200/20">
              <CardHeader>
                <CardTitle className="text-xl font-bold text-blue-900">分析统计</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex justify-between items-center">
                    <span className="text-blue-800">分析维度</span>
                    <Badge variant="secondary" className="bg-blue-100 text-blue-700">
                      {Object.keys(result.questions).length} 个
                    </Badge>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-blue-800">问题总数</span>
                    <Badge variant="secondary" className="bg-blue-100 text-blue-700">
                      {Object.values(result.questions).flat().length} 个
                    </Badge>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-blue-800">本地案例</span>
                    <Badge variant="secondary" className="bg-green-100 text-green-700">
                      {statistics.totalCases} 个
                    </Badge>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OsbornAnalysisPage;
